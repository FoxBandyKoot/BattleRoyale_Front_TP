{"version":3,"sources":["components/Logout.js","components/Menu.js","pages/Login.js","pages/Signup.js","observers/CreateGameStore.js","pages/CreateGame.js","pages/Forgot-password.js","pages/ModifyPassword.js","pages/Account.js","pages/CurrentGames.js","maps/Map1.js","pages/SearchGame.js","observers/SearchGameStore.js","pages/Saloon.js","observers/SaloonStore.js","context/PrivateRoute.js","App.js","index.js"],"names":["withRouter","props","variant","className","onClick","localStorage","removeItem","history","push","Menu","styles","bmBurgerButton","position","width","height","left","top","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","padding","fontSize","bmMorphShape","fill","bmItemList","color","bmOverlay","token","getItem","this","href","React","Component","Login","state","isError","setIsError","email","password","handleInputChange","bind","signin","event","target","value","type","checked","name","setState","e","preventDefault","err","success","alert","axios","post","then","response","status","setItem","data","get","headers","Authorization","catch","onSubmit","onChange","placeholder","id","to","Signup","pseudo","postSignUp","result","formData","FormData","undefined","setFormData","loadData","resultGet","makeObservable","action","observable","createGameFormData","computed","CreateGame","form","current","CreateGameStore","currentGameName","currentPlayerNumber","currentMap","formIsValid","render","createGame","owner","code","round","map","date","createPlayer","console","log","life","game","user","res","joinSaloon","buttonSubmit","document","getElementById","disabled","ref","maps","i","createRef","playerCreateForTheGame","gameName","playerNumbers","idGame","idPlayer","ForgotPassword","useState","ModifyPassword","passwordConfirm","handleChange","handleSubmit","password1","querySelector","password2","Account","handleDeleteAccount","put","delete","trigger","modal","nested","close","CurrentGames","games","index","gameId","newList","splice","item","icon","faSignOutAlt","leaveGame","Map1","myMap","grid","inputLinkClicked","handleAddSecondInput","onFinish","Array","from","length","patch","match","params","lastPlayer","playerId","generateMap","SearchGame","onMapChange","statcurrentMapChange","currentMapChange","onNameChange","searchName","filterGame","mapCreatedGame","componentDidMount","joinGame","makeAutoObservable","Saloon","observer","store","useRef","useHistory","useParams","currentGame","property","players","avatar","PrivateRoute","component","rest","App","body","style","backgroundColor","exact","path","SaloonStore","SearchGameStore","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.5af0591c.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router'\n\nfunction Logout(props) {\n\n    function logout() {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        props.history.push('/login')\n    }\n\n    return <button variant=\"primary\" className=\"custom-button\" onClick={logout}>Déconnexion</button>\n}\n\nexport default withRouter(Logout)","import React from \"react\";\nimport Logout from \"./Logout\";\nimport { slide as Burger } from 'react-burger-menu'\n\nclass Menu extends React.Component {\n\n    styles = {\n        bmBurgerButton: {\n            position: 'fixed',\n            width: '36px',\n            height: '30px',\n            left: '36px',\n            top: '36px'\n        },\n        bmBurgerBars: {\n            background: '#FFF'\n        },\n        bmBurgerBarsHover: {\n            background: '#a90000'\n        },\n        bmCrossButton: {\n            height: '24px',\n            width: '24px'\n        },\n        bmCross: {\n            background: '#FFF'\n        },\n        bmMenuWrap: {\n            position: 'fixed',\n            height: '100%'\n        },\n        bmMenu: {\n            background: '#373a47',\n            padding: '2.5em 1.5em 0',\n            fontSize: '1.15em'\n        },\n        bmMorphShape: {\n            fill: '#373a47'\n        },\n        bmItemList: {\n            color: '#b8b7ad',\n            padding: '0.8em'\n        },\n        bmOverlay: {\n            background: 'rgba(0, 0, 0, 0.3)'\n        }\n    }\n\n    render() {\n        const token = localStorage.getItem('token');\n        return (\n            // <Navbar.Brand href={token ? '/searchGame' : 'login'}>Battle Royal</Navbar.Brand>\n            <Burger styles={this.styles}>\n                {!token ? <a className=\"menu-btn\" href=\"/login\">Connexion</a> : ''}\n                {!token ? <a className=\"menu-btn\" href=\"/signup\">Inscription</a> : ''}\n                {token ? <a className=\"menu-btn\" href=\"/createGame\">Créer une partie</a> : ''}\n                {token ? <a className=\"menu-btn\" href=\"/searchGame\">Rechercher une partie</a> : ''}\n                {token ? <a className=\"menu-btn\" href=\"/currentGames\">Parties en cours</a> : ''}\n                {token ? <a className=\"menu-btn\" href=\"/account\">Mon compte</a> : ''}\n                {token ? <Logout></Logout> : \"\"}\n            </Burger>\n        )\n    }\n}\n\nexport default Menu;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport Menu from \"../components/Menu\"\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = [];\n        this.isError = false;\n        this.setIsError = false;\n        this.email = '';\n        this.password = '';\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.signin = this.signin.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    signin(e) {\n        e.preventDefault()\n        this.err = false;\n        this.success = false;\n\n        if (!this.state.email || !this.state.password) {\n            this.err = 'Vous n\\'avez pas remplis tous les champs'\n            alert(this.err);\n            return;\n        }\n        axios.post('http://salty-forest-02915.herokuapp.com/api/login', {\n            email: this.state.email,\n            password: this.state.password,\n        }).then(response => {\n            if (response.status === 200) {\n\n                this.success = true;\n                localStorage.setItem('token', response.data.token);\n\n                // Get informations on user account\n                axios.get('http://salty-forest-02915.herokuapp.com/api/current-user', {\n                    headers: {\n                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                    }\n                }).then(response => {\n                    localStorage.setItem('userId', response.data);\n                    this.props.history.push(\"/searchGame\");\n                })\n            }\n        }).catch((err) => {\n            alert(this.err);\n            this.err = 'Une erreur est survenue lors de la connexion';\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Menu />\n                <div className=\"div-form\">\n                    <h1 className=\"title-page\">Bienvenue !</h1>\n                    <form className=\"custom-form\" onSubmit={this.signin}>\n\n                        <label className=\"custom-label\">Adresse email</label>\n                        <input\n                            className=\"custom-input\"\n                            type=\"email\"\n                            value={this.state.email}\n                            onChange={this.handleInputChange}\n                            placeholder=\"email\"\n                            name=\"email\"\n                        />\n\n                        <label className=\"custom-label\">Mot de passe</label>\n\n                        <input\n                            className=\"custom-input\"\n                            type=\"password\"\n                            value={this.state.password}\n                            onChange={this.handleInputChange}\n                            placeholder=\"mot de passe\"\n                            name=\"password\"\n                        />\n                        <input type=\"submit\" id=\"mySubmit\" className=\"custom-button\" value=\"Se connecter\" />\n                    </form>\n\n                    <Link to=\"/forgot-password\">Mot de passe oublié ?</Link>\n                    <Link to=\"/signup\">Je n'ai pas encore de compte ?</Link>\n                    {this.state.isError && <error>Utilisateur ou mot de passe incorrect</error>}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Login;","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport axios from \"axios\";\nimport Menu from \"../components/Menu\";\nimport { withRouter } from 'react-router-dom';\n\nclass Signup extends React.Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            isError: false,\n        }\n            \n        this.email = '';\n        this.password = '';\n        this.pseudo = '';\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.postSignUp = this.postSignUp.bind(this);\n\n    }\n\n    postSignUp(e) {\n        e.preventDefault()\n    \n\n        if(!this.state.email || !this.state.password){\n            this.err = 'Vous n\\'avez pas remplis tous les champs'\n            alert(this.err);\n            return;  \n        }\n\n        axios.post(\"http://salty-forest-02915.herokuapp.com/api/sign-up\", {\n            email: this.state.email,\n            password: this.state.password,\n            pseudo: this.state.pseudo\n        }).then(result => {\n            if (result.status === 200) {\n                this.props.history.push(\"/login\");\n            } else {\n                this.setState({isError: true})\n            }\n        }).catch(e => {\n            this.setState({isError: true})\n        });\n\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    render(){\n        return (\n            <>\n                <Menu />\n                <div className=\"div-form\">\n                    <h1 className=\"title-page\">Inscription</h1>\n                    <form className=\"custom-form\" onSubmit={this.postSignUp}>\n    \n                    <label className=\"custom-label\">Adresse email</label>\n                        <input\n                            className=\"custom-input\"\n                            type = \"email\"\n                            name = \"email\"\n                            value = {this.state.email}\n                            onChange = {this.handleInputChange}\n                            placeholder = \"Email\"\n                        />\n    \n                        <label className=\"custom-label\">Mot de passe </label>\n                        <input\n                            className=\"custom-input\"\n                            type=\"password\"\n                            name=\"password\"\n                            value={this.state.password}\n                            onChange={this.handleInputChange}\n                            placeholder=\"Mot de passe\"\n                        />\n\n                        <label className=\"custom-label\">Pseudo </label>\n                        <input\n                            className=\"custom-input\"\n                            type=\"text\"\n                            name=\"pseudo\"\n                            value={this.state.pseudo}\n                            onChange={this.handleInputChange}\n                            placeholder=\"Pseudonyme\"\n                        />\n                        <button className=\"custom-button\">Sign Up</button>\n                    \n                    </form>\n                    \n                    <Link to=\"/login\">Déjà un compte ?</Link>\n                    { this.state.isError ? 'Erreur lors de la création de l\\'utilisateur' : ''}\n                </div>\n                </>\n            );\n    }\n    \n}\n\nexport default withRouter(Signup);","import { observable, computed, makeObservable, action } from 'mobx';\n\n/**\n * Make the form of create game page an observable\n */\nclass CreateGameStore {\n\n    formData = new FormData(undefined);\n    constructor(){\n\n        makeObservable(this, {\n            setFormData:action,\n            loadData:action,\n\n            formData: observable, \n            createGameFormData: computed,\n        })\n    }\n       \n    get createGameFormData() {\n        return this.formData;\n    };\n\n    setFormData = (data) => {\n        this.formData = data;\n    }    \n    \n    loadData = (data) => {\n        this.state.resultGet = data;\n    }   \n}\n\nexport default new CreateGameStore();","import React, { Component } from \"react\";\nimport Menu from \"../components/Menu\";\nimport axios from \"axios\";\nimport CreateGameStore from \"../observers/CreateGameStore\";\n\nexport default class CreateGame extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.form = React.createRef();\n    this.playerCreateForTheGame = -1;\n\n    this.state = {\n      gameName: \" \",\n      playerNumbers: [1, 2, 3, 4],\n      // properties: 'Publique', 'Privée'],\n      maps: ['Verte', 'Blue', 'Rouge']\n    }\n  }\n\n  onChange = (e) => {\n    const formData = new FormData((this.form.current))\n    CreateGameStore.setFormData(formData)\n\n    this.currentGameName = CreateGameStore.createGameFormData.get('gameNameInput')\n    this.currentPlayerNumber = CreateGameStore.createGameFormData.get('playerNumberSelect')\n    // this.currentProperty = CreateGameStore.createGameFormData.get('propertySelect')\n    this.currentMap = CreateGameStore.createGameFormData.get('mapSelect')\n\n    // Enable or disable button of form validation\n    this.formIsValid =\n      this.currentGameName !== \"\" &&\n      this.currentPlayerNumber !== 0 &&\n      // this.currentProperty !== \"\" &&\n      this.currentMap !== \"\"\n\n    this.render()\n  }\n\n  onSubmit = (form) => {\n    form.preventDefault()\n    this.createGame()\n  }\n\n  createGame = () => {\n    axios.post('http://salty-forest-02915.herokuapp.com/api/games', {\n      owner: \"/api/users/\" + localStorage.getItem('userId'),  \n      name: this.currentGameName,\n      code: \"N/A\",\n      round: 1,\n      map: this.currentMap,\n      date: \"2021-01-29\"\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      },\n      }).then(result => {\n        if (result.status === 200 || result.status === 201) {\n          \n          // If game is create, create the player and join the game\n          this.createPlayer(result.data.id)\n          // if (err){\n          //   alert(\"La partie n'a pu être créée, se renseigner dans la console\")\n          // }\n          \n        } \n        \n      }).catch(e => {\n        console.log(e)\n        alert(e)\n      });\n  }\n\n  createPlayer = (id) => {\n    axios.post('http://salty-forest-02915.herokuapp.com/api/players', {\n        round: 1,\n        life: 3,\n        game: '/api/games/' + id,\n        user: '/api/users/' + localStorage.getItem('userId')\n    }, {\n        headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n    }).then(res => {\n        if(res.status === 201) {\n          if (res.data.id !== -1){\n            console.log(\"Creation du joueur réussie, récupération de son identifiant pour rejoindre la nouvelle partie\");\n            this.joinSaloon(id, res.data.id)\n          }\n        }\n    }).catch(err => {\n        console.log(\"Echec de la creation du joueur\")\n        console.log(err);\n    })\n  }\n\n  joinSaloon(idGame, idPlayer){\n    this.props.history.push('/saloon/game/' + idGame + \"/player/\" + idPlayer)\n  }\n\n\n  render = () => {\n\n    // Enable or disable button of form validation\n    this.buttonSubmit = document.getElementById(\"mySubmit\")\n    if (this.buttonSubmit && this.formIsValid) {\n      this.buttonSubmit.disabled = false\n    } else if (this.buttonSubmit && !this.formIsValid) {\n      this.buttonSubmit.disabled = true\n    }\n\n    return <>\n      <Menu />\n\n      {/********************** DISPLAY PAGE **********************/}\n      <div className=\"div-form\">\n\n        {/********************** TITLE **********************/}\n        <h1 className=\"title-page\">Créer une partie</h1>\n\n        <form className=\"custom-form\" ref={this.form} onChange={this.onChange} onSubmit={this.onSubmit}>\n          {/********************** GAME NAME **********************/}\n          <label className=\"custom-label\">Nom de la partie</label>\n          <input\n            className=\"custom-input\"\n            type=\"text\"\n            name=\"gameNameInput\"\n          />\n\n          {/********************** PLAYER NUMBER SELECTOR **********************/}\n          {/* <label className=\"custom-label\">Nombre de joueurs sur la carte</label>\n          <select className=\"custom-dropdown\" name=\"playerNumberSelect\">\n            {\n              this.state.playerNumber.map((e, i) => <option key={i} value={e}>\n                {e}\n              </option>)\n            }\n          </select> */}\n\n\n          {/********************** PROPERTY SELECTOR **********************/}\n          {/* <label className=\"custom-label\">Qui peut rejoindre la partie ?</label>\n          <select className=\"custom-dropdown\" name=\"propertySelect\">\n            {\n              this.state.property.map((e, i) => <option key={i} value={e}>\n                {e}\n              </option>)\n            }\n          </select> */}\n\n          {/********************** MAP SELECTOR **********************/}\n          <label className=\"custom-label\">Sélectionner la carte</label>\n          <select className=\"custom-dropdown\" name=\"mapSelect\">\n            {\n              this.state.maps.map((e, i) => <option key={i} value={e}>\n                {e}\n              </option>)\n            }\n          </select>\n\n          {/********************** CREATE GAME BUTTON **********************/}\n          <input type=\"submit\" id=\"mySubmit\" className=\"custom-button\" disabled={true} value=\"Créer le salon\" />\n\n        </form>\n\n      </div>\n    </>\n  }\n}","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Menu from \"../components/Menu\";\n\nfunction ForgotPassword() {\n  // const [email, setEmail] = useState(\"\");\n  const [email] = useState(\"\");\n\n  return <>\n    <Menu />\n    {/********************** DISPLAY PAGE **********************/}\n    <div className=\"div-form\">\n      {/********************** TITLE **********************/}\n      <h1 className=\"title-page\">Accéder à votre compte</h1>\n\n      {/********************** FORM TO CHANGE PASSWORD **********************/}\n      <form className=\"custom-form\" ref={this.form} onChange={this.onChange}>\n\n        <label className=\"custom-label\">Inscrivez votre adresse email</label>\n        <input\n          className=\"custom-input\"\n          type=\"email\"\n          name={email}\n          placeholder=\"Email\"\n\n        />\n      </form>\n    </div>\n    <button id=\"mySubmit\" className=\"custom-button\" disabled>Continuer</button>\n\n    <Link to=\"/modify-password\">Modifier votre mot de passe</Link>\n\n  </>\n\n}\nexport default ForgotPassword;\n","// import React, { useState } from \"react\";\nimport React from \"react\";\nimport Menu from \"../components/Menu\";\nclass ModifyPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    //this.state = { value: \"\" };\n    this.password = \"\";\n    this.passwordConfirm = \"\";\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const password1 = document.querySelector(\".double-password-input\");\n    const password2 = document.querySelector(\".double-passwordConfirm-input\");\n    if (password1.value === password2.value) {\n      alert(\"Voulez-vous enregistrer votre mot de passe ? \" + password1.value);\n    } else {\n      alert(\"Mot de passe erroré!!! Veuillez le modifier\");\n    }\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n        <>\n          <Menu />\n          <div className=\"global\">\n            <h4 className=\"title-page\">Modifiez votre mot de passe</h4>\n\n            <form>\n              <input\n                className=\"double-password-input\"\n                type=\"text\"\n                value={this.password.value}\n                placeholder=\"mot de passe\"\n                onChange={this.handleChange}\n                name=\"password\"\n              />\n              <input\n                className=\"double-passwordConfirm-input\"\n                type=\"text\"\n                value={this.passwordConfirm.value}\n                placeholder=\"confirmer votre mot de passe\"\n                onChange={this.handleChange}\n                name=\"password-confirm\"\n              />\n              <button className=\"continous\" onClick={this.handleSubmit}>\n                Continuer\n              </button>\n            </form>\n          </div>\n        </>\n    );\n  }\n}\nexport default ModifyPassword;\n","import React from \"react\";\nimport Popup from \"reactjs-popup\";\nimport axios from \"axios\";\nimport Menu from \"../components/Menu\";\nimport { withRouter } from 'react-router'\n\nclass Account extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pseudo: '',\n            email: '',\n            password: '',\n            alert: ''\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('http://salty-forest-02915.herokuapp.com/api/users/' + localStorage.getItem('userId'), {\n            headers: {\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\n            }\n        }).then(res => {\n            this.setState({\n                email: res.data.email,\n                pseudo: res.data.pseudo ? res.data.pseudo : ''\n            });\n        }).catch(err => {\n            alert(err);\n        })\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit() {\n        if(this.state.password) {\n            axios.put('http://salty-forest-02915.herokuapp.com/api/update-password/' + localStorage.getItem('userId'), {\n                password: this.state.password,\n            }, {\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\n                }\n            }).then(res => {\n                if(res.status === 200) {\n\n                }\n            }).catch(err => {\n                alert(err);\n            })\n        }\n\n        axios.put('http://salty-forest-02915.herokuapp.com/api/users/' + localStorage.getItem('userId'), {\n            email: this.state.email,\n            pseudo: this.state.pseudo,\n        }, {\n            headers: {\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\n            }\n        }).then(res => {\n            if(res.status === 200) {\n                this.setState({alert: 'Les modifications ont été enregistrées.'})\n            }\n        }).catch(err => {\n            alert(err);\n        })\n    }\n\n    handleDeleteAccount() {\n        axios.delete('http://salty-forest-02915.herokuapp.com/api/users/' + localStorage.getItem('userId'), {\n            headers: {\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\n            }\n        }).then(res => {\n            if(res.status === 204) {\n                localStorage.removeItem('token');\n                localStorage.removeItem('userId');\n                this.props.history.push('/login');\n            }\n        }).catch(err => {\n            alert(err);\n        })\n    }\n\n    render() {\n        return <>\n            <Menu />\n            <div className=\"main\">\n                <div className=\"title-page\">Compte</div>\n                {this.state.alert &&\n                <div className=\"alert\">{this.state.alert}</div>\n                }\n\n                <form className=\"custom-form\">\n\n                    <label className=\"custom-label\">Pseudo</label>\n                    <input\n                        type=\"text\"\n                        value={this.state.pseudo}\n                        onChange={this.handleInputChange}\n                        placeholder=\"Pseudo\"\n                        name=\"pseudo\"\n                        className=\"custom-input\"\n                    />\n\n                    <label className=\"custom-label\">Changer adresse email</label>\n                    <input\n                        type=\"email\"\n                        value={this.state.email}\n                        onChange={this.handleInputChange}\n                        placeholder=\"Email\"\n                        name=\"email\"\n                        className=\"custom-input\"\n                    />\n\n                    <label className=\"custom-label\">Changer le mot de passe</label>\n                    <input\n                        type=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleInputChange}\n                        placeholder=\"Mot de passe\"\n                        name=\"password\"\n                        className=\"custom-input\"\n                    />\n                </form>\n                <button className=\"custom-button\" onClick={this.handleSubmit}>Sauvegarder</button>\n\n                <Popup\n                    trigger={<button className=\"custom-button\">Supprimer le compte</button>}\n                    modal\n                    nested\n                >\n                    {(close) => (\n                        <>\n                            <button className=\"close\" onClick={close}>\n                                &times;\n                            </button>\n                            <div className=\"content\">\n                                <button className=\"custom-button\" onClick={this.handleDeleteAccount}>Confirmer la suppression du compte</button>\n                                <button className=\"custom-button\" onClick={close}>Annuler</button>\n                            </div>\n                        </>\n                    )}\n                </Popup>\n\n            </div>\n        </>;\n    }\n}\n\nexport default withRouter(Account);","import React from \"react\";\nimport Popup from \"reactjs-popup\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport Menu from \"../components/Menu\";\nimport axios from \"axios\";\n\nclass CurrentGames extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            games: []\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://salty-forest-02915.herokuapp.com/api/games?players.user=/api/users/' + localStorage.getItem('userId'), {\n            headers: {\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\n            }\n        }).then(res => {\n            if(res.status === 200) {\n                this.setState({games: res.data['hydra:member']});\n            }\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    leaveGame(index, gameId, close) {\n        axios.get('http://salty-forest-02915.herokuapp.com/api/player-from-game/' + gameId, {\n            headers: {\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\n            }\n        }).then(res => {\n            if(res.status === 200) {\n                axios.delete('http://salty-forest-02915.herokuapp.com/api/players/' + res.data, {\n                    headers: {\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\n                    }\n                }).then(res => {\n                    if(res.status === 204) {\n                        const newList = this.state.games;\n                        newList.splice(index, 1);\n                        this.setState({ games: newList });\n                        close();\n                    }\n                }).catch(err => {\n                    console.log(err);\n                })\n            }\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Menu />\n                <div className=\"createGames\">\n                    <div className=\"main\">\n                        <div className=\"title-page\">Vos parties en cours</div>\n                        <table>\n                            <thead>\n                            <tr>\n                                <th>Nom</th>\n                                <th>Statut</th>\n                                <th>Nombre de tours</th>\n                                <th></th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.games.map((item, index) => {\n                                return (\n                                    <tr key={index}>\n                                        <td>{item.name}</td>\n                                        <td>{item.status}</td>\n                                        <td>{item.round}</td>\n                                        <td className=\"exit-btn\">\n                                            <Popup\n                                                trigger={<FontAwesomeIcon icon={faSignOutAlt} />}\n                                                modal\n                                                nested\n                                            >\n                                                {close => (\n                                                    <>\n                                                        <button className=\"close\" onClick={close}>\n                                                            &times;\n                                                        </button>\n                                                        <div className=\"content\">\n                                                            <button className=\"custom-button\" onClick={this.leaveGame.bind(this, index, item.id, close)}>Êtes-vous sûr de vouloir quitter la partie ?</button>\n                                                            <button className=\"custom-button\" onClick={close}>Annuler</button>\n                                                        </div>\n                                                    </>\n                                                )}\n                                            </Popup>\n                                        </td>\n                                    </tr>\n                                )})}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default CurrentGames;","import React from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport Menu from \"../components/Menu\";\nimport axios from \"axios\";\n\nclass Map1 extends React.Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.myMap = \"\";\n        this.grid = [];\n        \n        this.state = {\n            inputLinkClicked: false,\n        }\n\n        this.handleAddSecondInput = this.handleAddSecondInput.bind(this)           \n        this.onFinish = this.onFinish.bind(this)\n    }\n\n\n    generateMap() {\n        this.myMap = Array.from({ length: 100 }, () => ({}));\n    }\n\n    handleAddSecondInput() {\n\n        this.setState({\n            inputLinkClicked: true\n        })  \n    }\n\n\n\n    setPosition(){}\n\n    onFinish() {\n        console.log(this.props)\n        axios.patch('http://salty-forest-02915.herokuapp.com/api/games/' + this.props.match.params.gameId, {\n            lastPlayer: '/api/players/' + this.props.match.params.playerId\n        }, {\n            headers: {\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                'Content-Type': 'application/merge-patch+json'\n            }\n        }).then(res => {\n            if(res.status === 200) {\n                axios.get('http://salty-forest-02915.herokuapp.com/api/current-player-game/' + this.props.match.params.gameId, {\n                    headers: {\n                        'Authorization': 'Bearer ' + localStorage.getItem('token')\n                    }\n                }).then(res => {\n                    if(res.status === 200) {\n                        axios.get('http://salty-forest-02915.herokuapp.com/push/send-notification/' + res.data, {\n                            headers: {\n                                'Authorization': 'Bearer ' + localStorage.getItem('token')\n                            }\n                        }).then(res => {\n                            if(res.status === 200) {\n                                this.props.history.push('/currentGames')\n                            }\n                        }).catch(err => {\n                            console.log(err);\n                        })\n                    }\n                }).catch(err => {\n                    console.log(err);\n                })\n            }\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    render() {\n\n        this.generateMap();\n\n        return (\n        <>\n        <Menu/>\n        <div className=\"div-form\">\n            <div className=\"map\" onClick={this.handleAddSecondInput}>\n\n                {this.myMap.map((item, index) => {\n                    return (\n                        <p className=\"custom-p\" onClick={this.handleAddSecondInput}>{index}</p>\n                    )\n                    \n                })}\n            </div>\n            <button className=\"custom-button\" onClick={this.onFinish}>Finish turn</button>\n        </div>\n        </>\n        )\n    }\n}\nexport default withRouter(Map1);","import React, { Component } from \"react\";\nimport Menu from \"../components/Menu\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\nclass SearchGame extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.form = React.createRef();\n\n        this.state = {\n            // nameCreatedGame: [],\n            mapCreatedGame: [],\n            // properties: ['Publique', 'Privée'],\n            maps: ['Toutes', 'Verte', 'Bleu', 'Rouge'],\n            searchName: '',\n            currentMapChange: ''\n        }\n\n        this.onMapChange = this.onMapChange.bind(this);\n    }\n\n    onMapChange = (e) => {\n        if(this.statcurrentMapChange === 'Toutes') {\n            this.setState({\n                currentMapChange: ''\n            })\n            return \n        }\n        this.setState({\n            currentMapChange: e.target.value\n        })\n      }\n\n      onNameChange = (e) => {\n        this.setState({\n            searchName: e.target.value\n        })\n      }\n\n    filterGame = (e) => {\n        e.preventDefault()\n\n        if(this.state.currentMapChange || this.state.searchName) {\n            this.setState({\n                mapCreatedGame: []\n            })\n            axios.get('http://salty-forest-02915.herokuapp.com/api/games?name[]=' + this.state.searchName + '&map[]=' + this.state.currentMapChange, {\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\n                }\n            }).then(res => {\n                if(res.status === 200) {\n                    res.data['hydra:member'].map((item) => {\n                        axios.get('http://salty-forest-02915.herokuapp.com/api/players/?game=/api/games/' + item.id +'&user=/api/users/' + localStorage.getItem('userId'), {\n                            headers: {\n                                'Authorization': 'Bearer ' + localStorage.getItem('token')\n                            }\n                        }).then((res) => {\n                            if(res.data['hydra:totalItems'] === 0) {\n                                const games = this.state.mapCreatedGame;\n                                games.push(item)\n                                this.setState({\n                                    mapCreatedGame: games\n                                });\n                            }\n                        })\n                        return '';\n                    });\n                }\n            }).catch(err => {\n                alert(err);\n            })\n        } else {\n            this.componentDidMount()\n        }\n\n    }\n\n    joinGame = (id) => {\n        axios.post('http://salty-forest-02915.herokuapp.com/api/players', {\n            round: 1,\n            life: 3,\n            game: '/api/games/' + id,\n            user: '/api/users/' + localStorage.getItem('userId')\n        }, {\n            headers: {\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\n            }\n        }).then(res => {\n            if(res.status === 201) {\n                this.props.history.push('/saloon/game/' + id + '/player/' + res.data.id);\n            }\n        }).catch(err => {\n            alert(err);\n        })\n    }\n\n    componentDidMount = () => {\n        axios.get('http://salty-forest-02915.herokuapp.com/api/games', {\n            headers: {\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\n            }\n        }).then(res => {\n            if(res.status === 200) {\n                res.data['hydra:member'].map((item) => {\n                    axios.get('http://salty-forest-02915.herokuapp.com/api/players/?game=/api/games/' + item.id +'&user=/api/users/' + localStorage.getItem('userId'), {\n                        headers: {\n                            'Authorization': 'Bearer ' + localStorage.getItem('token')\n                        }\n                    }).then((res) => {\n                        if(res.data['hydra:totalItems'] === 0) {\n                            const games = this.state.mapCreatedGame;\n                            games.push(item)\n                            this.setState({\n                                mapCreatedGame: games\n                            });\n                        }\n                    })\n                    return '';\n                });\n            }\n        }).catch(err => {\n            alert(err);\n        })\n    }\n\n    render = () => {\n        return (\n            <>\n                <Menu />\n                <div className=\"searchGames\">\n                    <div className=\"main\">\n                        <div className=\"title-page\">Rechercher une partie</div>\n    \n                        {/********************** REASEARCH FORM **********************/}\n                        <form    ref={this.form} onSubmit={this.filterGame}>\n    \n                            <label className=\"custom-label\">Rerchercher par nom</label>\n                            <input\n                                type=\"search\"\n                                placeholder=\"Rechercher par nom\"\n                                name=\"search\"\n                                className=\"custom-input\"\n                                onChange={this.onNameChange}\n                                value={this.state.searchName}\n                            />\n    \n                            <label className=\"custom-label\">Rechercher par carte</label>\n                            <select className=\"custom-dropdown\" name=\"mapSelect\" onChange={this.onMapChange}>\n                                {\n                                    this.state.maps.map((e, i) => <option key={i} value={e}>\n                                        {e}\n                                    </option>)\n                                }\n                            </select>\n    \n                            {/* <label className=\"custom-label\">Rechercher par propriété</label>\n                            <select className=\"custom-dropdown\" name=\"propertySelect\">\n                                {\n                                    this.state.properties.map((e, i) => <option key={i} value={e}>\n                                        {e}\n                                    </option>)\n                                }\n                            </select> */}\n\n                            <input type=\"submit\" id=\"mySubmit\" className=\"custom-button\" value=\"Rechercher\" />\n                        </form>\n    \n                        {/********************** RESULT TAB **********************/}\n                        <table className=\"custom-table\">\n                            <thead>\n                                <tr>\n                                    <th>Nom</th>\n                                    <th>Carte</th>\n                                    <th>Action</th>\n                                    <th></th>\n    \n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.mapCreatedGame.map((item) => {\n                                    return (\n                                        <tr key={item.id}>\n                                            <td>{item.name}</td>\n                                            <td>{item.map}</td>\n                                            <td>\n                                                <button className=\"custom-button\" onClick={() => this.joinGame(item.id)}>Rejoindre</button>\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n    \n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withRouter(SearchGame);","import { makeAutoObservable } from \"mobx\"\n\nclass SearchGameStore {\n    games = [];\n    formData = new FormData(undefined);\n    resultGet= \"\";\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    setFormData(data) {\n        this.formData = data;\n    }\n\n}\n\nexport default new SearchGameStore();","import React, { useRef } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport Menu from \"../components/Menu\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nconst Saloon = observer(({ store }) => {\n\n    const form = useRef(null);\n    const history = useHistory();\n    const params = useParams();\n\n    const onChange = (e) => {\n        const formData = new FormData(form.current);\n        store.setFormData(formData);\n    }\n\n    const accessGame = () => {\n        history.push('/map/game/' + params.gameId + '/player/' + params.playerId);\n    }\n\n    return (\n        <>\n            <Menu />\n            <div onChange={onChange} ref={form}>\n                <div className=\"main\">\n                    <header className=\"custom-header\"></header>\n                    {/********************** PRESENTATION GAME **********************/}\n                    <div>\n                        <p className=\"custom-p\"> Nom de la partie : {store.currentGame.name}</p>\n                        <p className=\"custom-p\">Propriété : {store.currentGame.property}</p>\n                        <p className=\"custom-p\"> Carte : {store.currentGame.map}</p>\n                    </div>\n\n                    {/********************** SALOON TAB **********************/}\n                    <table className=\"custom-table\">\n\n                        <thead>\n                            <tr>\n                                <th></th>\n                                <th>Pseudo</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                             {store.currentGame.players.map((item, index) => {\n                                return (\n                                    <tr key={index}>\n                                        <td value={item.avatar}>{item.avatar}</td>\n                                        <td value={item.name}>{item.name}</td>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n\n                    </table>\n                    {/*<button className=\"custom-button\">Copier l'invitation</button>*/}\n                    <button className=\"custom-button\" onClick={accessGame}>Accéder à la partie</button>\n\n                </div>\n            </div>\n        </>\n    )\n});\n\nexport default Saloon;","import { makeAutoObservable } from \"mobx\"\n\nclass SaloonStore {\n    currentGame = {\n            name: 'Partie 1',\n            property: \"Private\",\n            map: \"Blue\",\n            players: [\n                {\n                avatar: \"avatar.PNG\",\n                name: \"Player 1\"\n                },{\n                avatar: \"avatar.PNG\",\n                name: \"Player 2\"\n                }\n            ]\n        }\n    ;\n    formData = new FormData(undefined);\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    setFormData(data) {\n        this.formData = data;\n    }\n}\n\nexport default new SaloonStore();","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                localStorage.getItem(\"token\") ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to=\"/login\" />\n                )\n            }\n        />\n    );\n}\n\nexport default PrivateRoute;","import \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'reactjs-popup/dist/index.css';\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport CreateGame from \"./pages/CreateGame\";\nimport ForgotPassword from \"./pages/Forgot-password\";\nimport ModifyPassword from \"./pages/ModifyPassword\";\nimport Account from \"./pages/Account\";\nimport CurrentGames from \"./pages/CurrentGames\";\nimport Map1 from \"./maps/Map1\";\nimport SearchGame from \"./pages/SearchGame\";\nimport SearchGameStore from \"./observers/SearchGameStore\";\nimport Saloon from \"./pages/Saloon\";\nimport SaloonStore from \"./observers/SaloonStore\";\nimport PrivateRoute from \"./context/PrivateRoute\";\n\nfunction App() {\n\n    initialize();\n\n    return (\n      <Router>\n          <Route exact path=\"/\" render={ (props) => <Login {...props}/> } />\n          <Route path=\"/login\" render={ (props) => <Login {...props}/> } />\n          <Route path=\"/signup\" render={ (props) => <Signup {...props}/> } />\n          <Route path=\"/modify-password\" component={ModifyPassword} />\n          <PrivateRoute path=\"/forgot-password\" component={ForgotPassword} />\n          <PrivateRoute path=\"/map/game/:gameId/player/:playerId\" component={Map1} />\n          <PrivateRoute path=\"/createGame\" component={CreateGame} />\n          <PrivateRoute path=\"/account\" component={Account} />\n          {/* <PrivateRoute path=\"/saloon\" render={ (props) => <Saloon {...props} store={SaloonStore}/> } /> */}\n          <PrivateRoute path=\"/saloon/game/:gameId/player/:playerId\" component={() => <Saloon store={SaloonStore} /> } />\n          <PrivateRoute path=\"/currentGames\" component={CurrentGames} />\n          <PrivateRoute path=\"/searchGame\" component={() => <SearchGame store={SearchGameStore} />} />\n      </Router>\n    \n    )\n\n    // init DOM, just after render() in component life cycle\n    function initialize() {\n        document.body.style.backgroundColor = \"#053244\";\n    }\n}\nexport default App;","import 'react-widgets/dist/css/react-widgets.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\n"],"sourceRoot":""}