{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/battle-royal/front/code/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { AuthContext } from \"./context/auth\";\nimport Home from './pages/home/Home';\nimport Login from \"./pages/login/Login\";\nimport Signup from \"./pages/signup/Signup\";\nimport Logout from \"./components/Logout\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from \"react-bootstrap/cjs/Navbar\";\nimport Nav from \"react-bootstrap/cjs/Nav\";\nexport const token = localStorage.getItem(\"token\") ? JSON.parse(localStorage.getItem(\"token\")).token : '';\nexport const expires = localStorage.getItem(\"token\") ? JSON.parse(localStorage.getItem(\"token\")).expires : '';\nexport const userId = localStorage.getItem(\"token\") ? JSON.parse(localStorage.getItem(\"token\")).userId : '';\n\nfunction App() {\n  _s();\n\n  const [authTokens, setAuthTokens] = useState(token);\n\n  const setTokens = data => {\n    if (data === undefined) {\n      localStorage.removeItem('token');\n      setAuthTokens(data);\n      return;\n    }\n\n    localStorage.setItem(\"token\", JSON.stringify(data));\n    setAuthTokens(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authTokens,\n      setAuthTokens: setTokens\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        bg: \"dark\",\n        variant: \"dark\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"/\",\n          children: \"Battle Royal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"mr-auto\",\n          children: [!authTokens ? /*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"/login\",\n            children: \"Connexion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 28\n          }, this) : '', !authTokens ? /*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"/signup\",\n            children: \"Inscription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 28\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), authTokens ? /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        component: Signup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jRYfBbHPyeJQle4R46Hp0HXKe4Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/var/www/html/battle-royal/front/code/src/App.js"],"names":["React","useState","BrowserRouter","Router","Route","AuthContext","Home","Login","Signup","Logout","Navbar","Nav","token","localStorage","getItem","JSON","parse","expires","userId","App","authTokens","setAuthTokens","setTokens","data","undefined","removeItem","setItem","stringify"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useState } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { AuthContext } from \"./context/auth\";\nimport Home from './pages/home/Home';\nimport Login from \"./pages/login/Login\";\nimport Signup from \"./pages/signup/Signup\";\nimport Logout from \"./components/Logout\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from \"react-bootstrap/cjs/Navbar\";\nimport Nav from \"react-bootstrap/cjs/Nav\";\n\nexport const token = localStorage.getItem(\"token\") ? JSON.parse(localStorage.getItem(\"token\")).token : '';\nexport const expires = localStorage.getItem(\"token\") ? JSON.parse(localStorage.getItem(\"token\")).expires : '';\nexport const userId = localStorage.getItem(\"token\") ? JSON.parse(localStorage.getItem(\"token\")).userId : '';\n\nfunction App() {\n  const [authTokens, setAuthTokens] = useState(token);\n  const setTokens = (data) => {\n    if(data === undefined) {\n      localStorage.removeItem('token');\n      setAuthTokens(data);\n      return;\n    }\n    localStorage.setItem(\"token\", JSON.stringify(data));\n    setAuthTokens(data);\n  }\n\n  return (\n    <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n      <Router>\n\n        <Navbar bg=\"dark\" variant=\"dark\" className=\"mb-3\">\n          <Navbar.Brand href=\"/\">Battle Royal</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            {!authTokens ? <Nav.Link href=\"/login\">Connexion</Nav.Link> : ''}\n            {!authTokens ? <Nav.Link href=\"/signup\">Inscription</Nav.Link> : ''}\n          </Nav>\n          {authTokens ? <Logout></Logout> : ''}\n        </Navbar>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n\n        </Router>\n    </AuthContext.Provider>\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}